# coding=utf-8
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

from collections import OrderedDict
from utilities.utilities import add_postfix
import plpy

##########################################################
## Helper variables and functions related to column names
## in model repo summary tables.
##########################################################

def get_summary_cols_dict(**kwargs):
    summary_cols_fields = [ModelRepoSummaryCols.SOURCE_TABLE_COLNAME,
                           ModelRepoSummaryCols.DEPENDENT_COLNAME,
                           ModelRepoSummaryCols.GROUPING_COLNAME,
                           ModelRepoSummaryCols.START_TRAIN_TIME_COLNAME,
                           ModelRepoSummaryCols.END_TRAIN_TIME_COLNAME,
                           ModelRepoSummaryCols.INDEPENDENT_COLNAME,
                           ModelRepoSummaryCols.NAME_COLNAME,
                           ModelRepoSummaryCols.DESC_COLNAME,
                           ModelRepoSummaryCols.MODEL_TYPE_COLNAME,
                           ModelRepoSummaryCols.MODEL_DATA_TYPE_COLNAME]
    model_summary_cols_dict = {x:kwargs[x] for x in summary_cols_fields if x in kwargs}
    if len(model_summary_cols_dict) != len(summary_cols_fields):
        missing_cols = list(
            set(summary_cols_fields) -
            set(model_summary_cols_dict.keys()))
        plpy.error("Model Versioning Error: Summary columns {} " \
            "are not assigned any value.".format(missing_cols))
    return model_summary_cols_dict

class ModelRepoCols():
    MODEL_ID_COLNAME = 'model_id'
    MODEL_TYPE_COLNAME = 'model_type'
    GROUPING_VALS_COLNAME = 'grouping_values'
    MODEL_DATA_COLNAME = 'model_data'
    ATTRIBUTES_COLNAME = 'attributes'

    MODEL_TABLE_COLS = OrderedDict([
        (MODEL_ID_COLNAME, 'int'),
        (MODEL_TYPE_COLNAME, 'text'),
        (GROUPING_VALS_COLNAME, 'text'),
        (MODEL_DATA_COLNAME, 'bytea'),
        (ATTRIBUTES_COLNAME, 'JSON')
    ])

class ModelRepoSummaryCols():
    MODEL_ID_COLNAME = 'model_id'
    MODEL_TYPE_COLNAME = 'model_type'
    START_TRAIN_TIME_COLNAME = 'start_training_time'
    END_TRAIN_TIME_COLNAME = 'end_training_time'
    SOURCE_TABLE_COLNAME = 'source_table'
    MODEL_TABLE_COLNAME = 'model_table'
    MODEL_REPO_COLNAME = 'model_repository'
    DEPENDENT_COLNAME = 'dependent_varname'
    INDEPENDENT_COLNAME = 'independent_varname'
    GROUPING_COLNAME = 'grouping_col'
    NAME_COLNAME = 'name'
    DESC_COLNAME = 'description'
    MAD_VER_COLNAME = 'madlib_version'
    SUMMARY_COLNAME = 'summary'
    MODEL_DATA_TYPE_COLNAME = 'model_data_type'
    INTERNAL_ID_COLNAME = '__madlib_internal_id__'

    MODEL_TABLE_SUMMARY_COLS_TYPES = OrderedDict([
        (MODEL_ID_COLNAME, 'serial'),
        (MODEL_TYPE_COLNAME, 'text'),
        (START_TRAIN_TIME_COLNAME, 'timestamp'),
        (END_TRAIN_TIME_COLNAME, 'timestamp'),
        (SOURCE_TABLE_COLNAME, 'text'),
        (MODEL_TABLE_COLNAME, 'text'),
        (MODEL_REPO_COLNAME, 'text'),
        (DEPENDENT_COLNAME, 'text'),
        (INDEPENDENT_COLNAME, 'text[]'),
        (GROUPING_COLNAME, 'text'),
        (NAME_COLNAME, 'text'),
        (DESC_COLNAME, 'text'),
        (MAD_VER_COLNAME, 'text'),
        (SUMMARY_COLNAME, 'JSON'),
        (MODEL_DATA_TYPE_COLNAME, 'text'),
        (INTERNAL_ID_COLNAME, 'text')
        ])

    COLS_FOR_VIEW_FROM_SUMMARY_REPO = [
        MODEL_TYPE_COLNAME,
        START_TRAIN_TIME_COLNAME,
        END_TRAIN_TIME_COLNAME,
        SOURCE_TABLE_COLNAME,
        MODEL_TABLE_COLNAME,
        MODEL_REPO_COLNAME,
        DEPENDENT_COLNAME,
        INDEPENDENT_COLNAME,
        GROUPING_COLNAME,
        NAME_COLNAME,
        DESC_COLNAME,
        MAD_VER_COLNAME]

##########################################################
## Miscellaneous helper functions
##########################################################
def get_summary_tablename(tbl):
    return add_postfix(tbl, '_summary') if tbl else None
